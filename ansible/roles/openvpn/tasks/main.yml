---
- name: Install required packages
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - openvpn
      - easy-rsa
      - python3-pip
      - curl
      - unzip

- name: Download AWS CLI installer
      get_url:
        url: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
        dest: "/tmp/awscliv2.zip"

- name: Unzip AWS CLI installer
      unarchive:
        src: "/tmp/awscliv2.zip"
        dest: "/tmp"
        remote_src: yes

- name: Run AWS CLI installer
      command: "/tmp/aws/install"

- name: Verify AWS CLI installation
      command: "aws --version"
      register: aws_cli_version

- name: Display AWS CLI version
      debug:
        msg: "{{ aws_cli_version.stdout }}"        

- name: Create OpenVPN directory structure
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /etc/openvpn/easy-rsa
    - /etc/openvpn/clients

- name: Copy EasyRSA
  copy:
    src: /usr/share/easy-rsa/
    dest: /etc/openvpn/easy-rsa/
    remote_src: yes

- name: Configure OpenVPN server
  template:
    src: server.conf.j2
    dest: /etc/openvpn/server.conf
  notify: restart openvpn

- name: Generate certificates
  command: "{{ item }}"
  args:
    chdir: /etc/openvpn/easy-rsa/
  loop:
    - ./easyrsa init-pki
    - ./easyrsa build-ca nopass
    - ./easyrsa gen-dh
    - ./easyrsa build-server-full server nopass

- name: Create users
  user:
    name: "{{ item }}"
    shell: /bin/false
    system: yes
  loop: "{{ vpn_users }}"

- name: Generate client certificates
  command: "./easyrsa build-client-full {{ item }} nopass"
  args:
    chdir: /etc/openvpn/easy-rsa/
  loop: "{{ vpn_users }}"

- name: Generate .ovpn files
  template:
    src: client.ovpn.j2
    dest: "/etc/openvpn/clients/{{ item }}.ovpn"
  loop: "{{ vpn_users }}"

- name: Upload .ovpn files to S3
  aws_s3:
    bucket: "{{ s3_bucket }}"
    object: "{{ item }}.ovpn"
    src: "/etc/openvpn/clients/{{ item }}.ovpn"
    mode: put
  loop: "{{ vpn_users }}"
  delegate_to: localhost

- name: Verify OpenVPN installation
  command: systemctl is-active openvpn
  register: openvpn_status
  changed_when: false

- name: Display OpenVPN status
  debug:
    msg: "OpenVPN is {{ 'active' if openvpn_status.rc == 0 else 'inactive' }}"   