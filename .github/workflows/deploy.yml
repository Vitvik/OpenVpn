name: Deploy EC2 VPN

on:
  repository_dispatch:
    types: [deploy-vpn]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
     
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.client_payload.region }}

      - name: Print selected region
        run: echo "Selected region is ${{ github.event.client_payload.region }}"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          echo "Initializing Terraform..."
          cd terraform
          terraform init
          echo "Terraform initialized successfully"

      - name: Terraform Apply
        run: |
          echo "Applying Terraform configuration..."
          cd terraform
          terraform apply -auto-approve \
           -var="region=${{ github.event.client_payload.region }}" \
           -var="public_key=${{ secrets.SSH_PUBLIC_KEY }}"
          echo "Terraform apply completed"
          terraform output -json > terraform_output.json
          cat terraform_output.json

      - name: Wait for EC2 to be ready
        run: |
          sleep 30

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Configure SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/serv_tren
          chmod 600 ~/.ssh/serv_tren

      - name: Get EC2 Public IP
        id: get_ip
        run: |
          cd terraform
          IP=$(terraform output -raw server_public_ip)
          echo "public_ip=$IP" >> $GITHUB_OUTPUT
          echo $IP > ../ansible/server_ip.txt

      - name: Create inventory file
        run: |
          cd ansible
          echo "[vpn]" > inventory.ini
          echo "${{ steps.get_ip.outputs.public_ip }} ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/serv_tren" >> inventory.ini
          echo "Inventory file created with public IP: ${{ steps.get_ip.outputs.public_ip }}"
          
      - name: Test SSH connection
        run: |
          ssh -i ~/.ssh/serv_tren -o StrictHostKeyChecking=no ubuntu@${{ steps.get_ip.outputs.public_ip }} "echo 'SSH connection successful'"

      - name: Run Ansible Playbook
        run: |
          cd ansible
          ansible-playbook -i inventory.ini openvpn.yml
          